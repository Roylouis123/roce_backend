name: Deploy Backend to EC2

on:
  push:
    branches:
      - main  # Runs on pushes to main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region us-east-1  # Change to your AWS region

      - name: Check if EC2 Instance Exists
        id: check_ec2
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=MyBackend" \
                      --query "Reservations[*].Instances[*].InstanceId" --output text)
          
          if [ -z "$INSTANCE_ID" ]; then
            echo "EC2 instance not found. Creating a new one..."
            INSTANCE_ID=$(aws ec2 run-instances --image-id ami-12345678 --instance-type t2.micro \
              --key-name MyKeyPair --security-groups MySecurityGroup \
              --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=MyBackend}]' \
              --query "Instances[0].InstanceId" --output text)
            echo "Waiting for EC2 instance to initialize..."
            aws ec2 wait instance-status-ok --instance-ids $INSTANCE_ID
          else
            echo "EC2 instance exists: $INSTANCE_ID"
          fi

          PUBLIC_IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID \
                     --query "Reservations[*].Instances[*].PublicIpAddress" --output text)
          echo "EC2_PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

      - name: Deploy Code to EC2
        run: |
          echo "Connecting to EC2..."
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/MyKeyPair.pem ec2-user@${{ env.EC2_PUBLIC_IP }} << 'EOF'
            cd /home/ec2-user/my-backend-repo/scripts
            bash deploy.sh
          EOF
