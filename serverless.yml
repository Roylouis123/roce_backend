service: auth-service

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    REGION: ${self:provider.region}

functions:
  getUserDetails:
    handler: lambda/getUserDetails.handler
    events:
      - http:
          path: /user/details
          method: post
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: !Ref ApiAuthorizer

resources:
  Resources:
    ApiAuthorizer:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        Name: CognitoAuthorizer
        Type: COGNITO_USER_POOLS
        IdentitySource: method.request.header.Authorization
        RestApiId: !Ref ApiGatewayRestApi
        ProviderARNs:
          - !GetAtt CognitoUserPool.Arn

    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        Name: ${self:service}-api-${self:provider.stage}

  # Include external resource files
  - ${file(resources/cognito.yml)}
  - ${file(resources/iam_role.yml)}

  Outputs:
    UserPoolId:
      Value: !Ref CognitoUserPool
      Export:
        Name: ${self:service}-UserPoolId-${self:provider.stage}
    UserPoolClientId:
      Value: !Ref CognitoUserPoolClient
      Export:
        Name: ${self:service}-UserPoolClientId-${self:provider.stage}
    ApiUrl:
      Value: !Sub "https://${ApiGatewayRestApi}.execute-api.${self:provider.region}.amazonaws.com/${self:provider.stage}"
      Export:
        Name: ${self:service}-ApiUrl-${self:provider.stage}